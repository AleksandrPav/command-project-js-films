{"mappings":"YAEA,MAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,sBAGzBC,EAAU,ICND,MAIbC,oBACE,IACE,aAAaC,MACX,2GAA2GC,KAAKC,QAChHC,MAAKC,IACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,UAElB,MACAC,SAASC,OAAOC,QAAQ,gDAG5BZ,kBACE,aAAaC,MACX,yGAECG,MAAKC,IACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,UAEjBL,MAAKS,GACGA,IA5BbC,cACEZ,KAAKC,KAAO,IDKhBJ,EAAQgB,cAAcX,MAAKY,IACzBjB,EAAQkB,YAAYb,MAAKc,KAK3B,SAAyBF,EAAQG,GAC/BxB,EAAKC,KAAKwB,UAAYJ,EACnBK,KAAIC,IACH,IAAIC,EAwBV,SAAkBC,EAAUL,GAC1B,OAAOK,EAASH,KAAII,GACXN,EAAOO,MAAKC,GAASA,EAAMF,KAAOA,IAAIG,OA1B7BC,CAASP,EAAMQ,UAAWX,GAIxC,OAHII,EAAQQ,OAAS,IACnBR,EAAU,CAACA,EAAQ,GAAIA,EAAQ,GAAI,UAE9B,yHAGHD,EAAMU,gIAGuBV,EAAMW,mDACPV,EAAQW,KAChC,iFAE8BZ,EAAMa,aAAaC,MAC7C,EACA,oDAMbF,KAAK,IA7BNG,CAAgBrB,EAAOsB,QAASpB,EAAUC,c","sources":["src/js/movie-list.js","src/js/work-with-api.js"],"sourcesContent":["import TopMovies from './work-with-api';\n\nconst refs = {\n  list: document.querySelector('.movie-collection'),\n};\n\nconst topList = new TopMovies();\ntopList.fetchMovies().then(movies => {\n  topList.fetchGenr().then(generlist => {\n    topMoviesMarkUp(movies.results, generlist.genres);\n  });\n});\n\nfunction topMoviesMarkUp(movies, genres) {\n  refs.list.innerHTML = movies\n    .map(movie => {\n      let movie_g = getGenrs(movie.genre_ids, genres);\n      if (movie_g.length > 2) {\n        movie_g = [movie_g[0], movie_g[1], 'Other'];\n      }\n      return `<li class=\"movies__item\">\n    <a href=\"\" class=\"movies__link\">\n        <img src='https://image.tmdb.org/t/p/original${\n          movie.poster_path\n        }' class=\"movie__image\" alt=\"Movie\">\n        <div class=\"movie__text-part\">\n            <h2 class=\"movie__title\">${movie.title}</h2>\n            <p class=\"movie__genre\">${movie_g.join(\n              ' '\n            )} <span class=\"stick\">|</span> \n                <span class=\"movie__year\">${movie.release_date.slice(\n                  0,\n                  4\n                )}</span></p>\n        </div>\n    </a>\n</li>`;\n    })\n    .join('');\n}\nfunction getGenrs(genresID, genres) {\n  return genresID.map(id => {\n    return genres.find(genre => genre.id === id).name;\n  });\n}\n","export default class TopMovies {\n  constructor() {\n    this.page = 1;\n  }\n  async fetchMovies() {\n    try {\n      return await fetch(\n        `https://api.themoviedb.org/3/movie/popular?api_key=7fea517bd5b294dd7a1b57e94e2c1c68&language=en-US&page=${this.page}`\n      ).then(response => {\n        if (!response.ok) {\n          throw new Error(response.status);\n        }\n        return response.json();\n      });\n    } catch {\n      Notiflix.Notify.failure('Sorry, we have API error. Please try again.');\n    }\n  }\n  async fetchGenr() {\n    return await fetch(\n      'https://api.themoviedb.org/3/genre/movie/list?api_key=7fea517bd5b294dd7a1b57e94e2c1c68&language=en-US'\n    )\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(response.status);\n        }\n        return response.json();\n      })\n      .then(geners => {\n        return geners;\n      });\n  }\n}\n"],"names":["$7b2f36280afae82d$var$refs","list","document","querySelector","$7b2f36280afae82d$var$topList","async","fetch","this","page","then","response","ok","Error","status","json","Notiflix","Notify","failure","geners","constructor","fetchMovies","movies","fetchGenr","generlist","genres","innerHTML","map","movie","movie_g","genresID","id","find","genre","name","$7b2f36280afae82d$var$getGenrs","genre_ids","length","poster_path","title","join","release_date","slice","$7b2f36280afae82d$var$topMoviesMarkUp","results"],"version":3,"file":"index.d3c60374.js.map"}